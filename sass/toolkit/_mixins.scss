// Managing Responsive Breakpoints with Sass
// @link http://www.sitepoint.com/managing-responsive-breakpoints-sass/

// Usage: 
// @include min-width(small) { ... }
// @include min-width(medium) { ... }
// @include min-width(large) { ... }

// $breakpoints: (
//   'small'  : ( min-width: 360px ),
//   'medium' : ( min-width: 600px ),
//   'large'  : ( min-width: 960px ),
//   'xlarge'  : ( min-width: 1200px )
// );
//   
// @mixin min-width($name) {
//   // If the key exists in the map
//   @if map-has-key($breakpoints, $name) {
//     // Prints a media query based on the value
//     @media #{inspect(map-get($breakpoints, $name))} {
//       @content;
//     }
//   }
//  
//   // If the key doesn't exist in the map
//   @else {
//     @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
//         + "Please make sure it is defined in `$breakpoints` map.";
//   }
// }
// 
// 
// @mixin clearfix {
// 	// adapted from http://nicolasgallagher.com/micro-clearfix-hack/
// 	
// 	&:before {
// 		content: " ";
// 		display: table;
// 	}
// 	
// 	&:after {
// 		clear: both;
// 		content: " ";
// 		display: table;
// 	}
// 	
// 	*zoom: 1;
// }


// applies left angle embelishment 
@mixin angle-left {
	position: relative; 
	
	&:before {
		background: url('data:image/svg+xml;charset=utf-8,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22utf-8%22%3F%3E%0D%0A%3C%21DOCTYPE%20svg%20PUBLIC%20%22-%2F%2FW3C%2F%2FDTD%20SVG%201.1%2F%2FEN%22%20%22http%3A%2F%2Fwww.w3.org%2FGraphics%2FSVG%2F1.1%2FDTD%2Fsvg11.dtd%22%3E%0D%0A%3Csvg%20version%3D%221.1%22%20id%3D%22Layer_1%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22%20x%3D%220px%22%20y%3D%220px%22%0D%0A%09%20width%3D%2257.734px%22%20height%3D%22100px%22%20viewBox%3D%22-14.434%20-25%2057.734%20100%22%20enable-background%3D%22new%20-14.434%20-25%2057.734%20100%22%0D%0A%09%20xml%3Aspace%3D%22preserve%22%3E%0D%0A%3Cpolygon%20fill%3D%22%23FFFFFF%22%20points%3D%2243.354%2C74.938%20-14.484%2C-25%20-14.38%2C75%20%22%2F%3E%0D%0A%3C%2Fsvg%3E') no-repeat 0 top;
		content: "";
		display: block;
		// height: 50px;
		// width: 28px;
		height: 100%;
		width: 8.5%;
		min-width: 29px;
		position: absolute;
		top: 0;
		left: 0;
	}
}


// applies right angle embelishment 
@mixin angle-right {
	position: relative; 
	
	&:after {
		background: url('data:image/svg+xml;charset=utf-8,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22utf-8%22%3F%3E%0D%0A%3C%21DOCTYPE%20svg%20PUBLIC%20%22-%2F%2FW3C%2F%2FDTD%20SVG%201.1%2F%2FEN%22%20%22http%3A%2F%2Fwww.w3.org%2FGraphics%2FSVG%2F1.1%2FDTD%2Fsvg11.dtd%22%3E%0D%0A%3Csvg%20version%3D%221.1%22%20id%3D%22Layer_1%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22%20x%3D%220px%22%20y%3D%220px%22%0D%0A%09%20width%3D%2257.734px%22%20height%3D%22100px%22%20viewBox%3D%22-14.434%20-25%2057.734%20100%22%20enable-background%3D%22new%20-14.434%20-25%2057.734%20100%22%0D%0A%09%20xml%3Aspace%3D%22preserve%22%3E%0D%0A%3Cpolygon%20fill%3D%22%23FFFFFF%22%20points%3D%22-14.434%2C-25%2043.301%2C75%2043.301%2C-25%20%22%2F%3E%0D%0A%3C%2Fsvg%3E') no-repeat right bottom;
		background-size: cover;
		content: "";
		display: block;
		// height: 50px;
		// width: 28px;
		height: 100%;
		width: 8.5%;
		min-width: 29px;
		position: absolute;
		bottom: 0;
		right: 0;
	}
}


// applies shadow style
@mixin border-shadow( $border-width: 8px, $opacity: 0.5 ) {
	border: $border-width solid $white;
	box-shadow: 0px 0px 3px 2px rgba(100, 100, 100, $opacity);
	// padding: 9px;
}


// applied to the ul element
@mixin inline-list($margin-direction: left) {
	list-style: none;
	margin: 0 auto;
	
	> li {
		display: inline-block;
		text-align: left;
		list-style: none;
	//	margin-#{$margin-direction}: $small-spacing;
		
		> * { display: block; }
	}
}


// applied to the ul element
@mixin flex-menu($justify-content: center) {
	display: -webkit-box;
	display: -moz-box;
	display: -ms-flexbox;
	display: -webkit-flex;
	display: flex;
	flex-wrap: wrap;
	justify-content: $justify-content;
	
	li {
		// flex: 1;
		position: relative;
		text-align: center;
	}
	
}


// For adding font icons to elements using CSS pseudo-elements
// http://jaydenseric.com/blog/fun-with-sass-and-font-icons
@mixin icon($position: before, $icon: false, $styles: true) {
    @if $position == both {
        $position: 'before, &:after';
    }
    // Either a :before or :after pseudo-element, or both, defaulting to :before
    &:#{$position} {
        @if $icon {
            // A particular icon has been specified
            content: "#{map-get($icons, $icon)}";
        }
        @if $styles {
            // Supportive icon styles required
            speak: none;
            font-style: normal;
            font-weight: normal;
            font-family: $font-family-icon;
        }
        // Include any extra rules supplied for the pseudo-element
        @content;
    }
}


// http://www.zeldman.com/2012/03/01/replacing-the-9999px-hack-new-image-replacement/
%image-replacement {
	overflow: hidden;
	text-indent: 200%;
	white-space: nowrap;
}

// http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
%visuallyhidden {
	position: absolute;
	overflow: hidden;
	clip: rect(0 0 0 0);
	margin: -1px;
	padding: 0;
	width: 1px;
	height: 1px;
	border: 0;
}


@mixin iconbefore( $glyph: "\e001", $font-family: "WooCommerce" ) {
	font-family: $font-family;
	speak: none;
	font-weight: normal;
	font-variant: normal;
	text-transform: none;
	line-height: 1;
	-webkit-font-smoothing: antialiased;
	margin-right: .618em;
	content: $glyph;
	text-decoration: none;
}

@mixin iconafter( $glyph: "\e001", $font-family: "WooCommerce" ) {
	font-family: $font-family;
	speak: none;
	font-weight: normal;
	font-variant: normal;
	text-transform: none;
	line-height: 1;
	-webkit-font-smoothing: antialiased;
	margin-left: .618em;
	content: $glyph;
	text-decoration: none;
}

@mixin loader() {
	&:before {
		height: 1em;
		width: 1em;
		display: block;
		position: absolute;
		top: 50%;
		left: 50%;
		margin-left: -.5em;
		margin-top: -.5em;
		-webkit-animation: spin 1s ease-in-out infinite;
	    -moz-animation: spin 1s ease-in-out infinite;
	    animation: spin 1s ease-in-out infinite;
	    font-family: FontAwesome;
	    content: "\f1ce";
	    // background: url(../images/icons/loader.svg) center center;
	    // background-size: cover;
		line-height: 1;
		text-align: center;
		font-size: 2em;
		color: rgba(#000,0.75);
	}
}

